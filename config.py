from box import Box


config = {
    'cuda': False,
    'instance': 'food_model_lightning/resnetv2_101_foodtrain',
    'resume': '',
    'epochs': 20,
    'opt': 'sgd',
    'trainer': {
        'num_sanity_val_steps': 1,
        'gradient_clip_val': None,
        'val_check_interval': 1,
        'benchmark': True,
        'max_epochs': 21,
        },  
    'lr': 0.005,
    'lr_scheduler_name': 'WarmupMultiStepLR',
    'lr_scheduler': {
        'milestones': [21600, 27000, 32400],
        'gamma': 0.1,
        'warmup_factor': 0.001,
        'warmup_iters': 5000,
        'warmup_method': "linear",
        'last_epoch': -1,
        },
    'optimizer_name': 'optim.SGD',
    'optimizer': {
        'momentum': 0.9,
        'weight_decay': 4e-5,
        },
    'model': {
        'device': 'cuda',
        'backbone': {
            'type': 'timm',
            'name': 'tf_efficientnet_b3_ns',
            'in_features': ['p3', 'p4', 'p5'],
            'output_channel': 256,
            'top_levels': 2,
            'strides': [8, 16, 32],
            'channels': [512, 1024, 2048],
        },
        'rpn': {
            'fcos': {
                'in_features': ['p3', 'p4', 'p5', 'p6', 'p7'],
                'center_sample': True,
                'fpn_strides': [8, 16, 32, 64, 128],
                'inference_th_test': 0.05,
                'inference_th_train': 0.05,
                'loc_loss_type': 'giou',
                'loss_alpha': 0.25,
                'loss_gamma': 2.0,
                'nms_th': 0.6,
                'norm': 'gn',
                'num_box_convs': 4,
                'num_classes': 1,
                'num_cls_convs': 4,
                'num_share_convs': 0,
                'post_nms_topk_test': 100,
                'post_nms_topk_train': 100,
                'pos_radius': 1.5,
                'pre_nms_topk_test': 1000,
                'pre_nms_topk_train': 1000,
                'prior_prob': 0.01,
                'sizes_of_interest': [64, 128, 256, 512, 1024],
                'thresh_with_ctr': True,
                'top_levels': 0,
                'use_deformable': True,
                'use_relu': True,
                'use_scale': True,
                'yield_proposal': False,
                'box_quality': "ctrness",
                'loss_normalizer_cls': "fg",
                'loss_weight_cls': 1.0
                }
        },
        'head': {
            'condinst': {
                'mask_head': {
                    'num_layers': 3,
                    'channels': 8,
                    'disable_rel_coords': False,
                    },
                'mask_branch': {
                    'out_channels': 16,
                    'channels': 128,
                    'in_features': ['p3', 'p4', 'p5'],
                    'norm': 'BN',
                    'num_convs': 4,
                    'out_channels': 16,
                    'semantic_loss_on': False,
                    },
                'bottom_pixels_removed': -1,
                'mask_out_stride': 4,
                'max_proposals': -1,
                'topk_proposals_per_im': 64,
                },
            'boxinst': {
                'enabled': True,
                'bottom_pixels_removed': 10,
                'pairwise': {
                    'color_thresh': 0.3,
                    'dilation': 2,
                    'size': 3,
                    'warmup_iters': 10000,
                    },
                },
            },
    },
    'data': {
        'label_map': None,
        'num_workers': 0,
        'train_path': '/data/Dataset',
        'train_json': '/data/Dataset/food_train.json',
        'val_path': '/data/Dataset',
        'val_json': '/data/Dataset/food_test.json',
        'means': (103.94, 116.78, 123.68),
        'discard_box_width': 0,
        'discard_box_height': 0,
        'std': (57.38, 57.12, 58.40),
        'class_names': ['food'],
        'input_size': [384, 512, 640],
        'preserve_aspect_ratio': .0,
        'batch_size': 2,
        'discard_box_height': 0,
        'transform': {
            'channel_order': 'RGB',
            'normalize': False,
            'subtract_means': False,
            'to_float': False,
        },
        'augment_albumentation': False,
        'augment_photometric_distort': False,
        'augment_expand': False,
        'augment_random_sample_crop': False,
        'augment_random_mirror': False,
        'augment_random_flip': False,
        'mask_size': 16,
        'use_gt_bboxes': True,
    }
}

cfg = Box(config)
